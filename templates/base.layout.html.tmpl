{{define "base"}}
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs4.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <a class="navbar-brand" href="#">Navbar</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/about">About</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Rooms
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="/rooms/luxury-suite">Luxury Suite</a>
          <a class="dropdown-item" href="/rooms/standard-room">Standard Room</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/contact">Contact</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/search-availability">Book Now</a>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
  </div>
</nav>

        {{block "content" .}}

        {{end}}
        
    <div class="row my-footer">
        <div class="col">
            Left
        </div>
        <div class="col">
            Middle
        </div>
        <div class="col">
            Right
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}

    <script>
      let attention = prompt();

      (function() {
        'use strict';
        window.addEventListener('load', function() {
          let forms = document.getElementsByClassName("needs-validation");
          Array.prototype.filter.call(forms, function(form) {
            form.addEventListener("submit", function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add("was-validated");
            }, false);
          });
        }, false);
      })();

      function notify(msg, type) {
        notie.alert({
          type: type,
          text: msg
        });
      }

      function notifyModal(title, text, icon, confirmationButtonText) {
        Swal.fire({
          title: title,
          html: text,
          icon: icon,
          confirmationButtonText: confirmationButtonText
        })
      }

      {{with .Error}}
        notify("{{.}}", "error")
      {{end}}

      {{with .Flash}}
        notify("{{.}}", "flash")
      {{end}}

      {{with .Warning}}
        notify("{{.}}", "warning")
      {{end}}

      function prompt() {
        let toast = function(content) {
          const {
            msg = "",
            icon = "success",
            position = "top-end"
          } = content;
        
          console.log("creating toast");
          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            icon: icon,
            position: position,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.onmouseenter = Swal.stopTimer;
              toast.onmouseleave = Swal.resumeTimer;
            }
          });

          Toast.fire({});
        }

        let success = function(content) {
          const {
            msg = "",
            title = "",
            footer = ""
          } = content;

          Swal.fire({
            icon: "success",
            title: title,
            text: msg,
            footer: footer
          });
        }

        let error = function(content) {
          const {
            msg = "",
            title = "",
            footer = ""
          } = content;

          Swal.fire({
            icon: "error",
            title: title,
            text: msg,
            footer: footer
          });
        }

        let customHtmlAlert = async function(content) {
          const {
            msg = "",
            title = ""
          } = content;

          const { value: formValues } = await Swal.fire({
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            willOpen: () => {
              const reservationDatesModal = document.getElementById("reservation-dates-modal");
              console.log(reservationDatesModal);
              const dateRangePicker = new DateRangePicker(reservationDatesModal, {
              });
            },
            preConfirm: () => {
              return [
                document.getElementById("check_in_date").value,
                document.getElementById("check_out_date").value
              ];
            },
            didOpen: () => {
                document.getElementById("check_in_date").removeAttribute("disabled");
                document.getElementById("check_out_date").removeAttribute("disabled");
            }
          });
          if (formValues) {
            Swal.fire(JSON.stringify(formValues));
          }

        }

        return {
          toast: toast,
          success: success,
          error: error,
          customHtmlAlert: customHtmlAlert
        }
      }
    </script>
  </body>
</html>
{{end}}